set-option -g default-command '/bin/bash'

set -g focus-events on

set-option -g status-style bg=black
set-option -g status-style fg=yellow
set-option -g status-style default

# turn mouse on 
set -g mouse on 

# enable vi keys
setw -g mode-keys vi


# switch panes vim like
bind h select-pane -L
bind l select-pane -R
bind k select-pane -U
bind j select-pane -D

# resize panes vim like
bind-key C-H resize-pane -L 10
bind-key C-J resize-pane -D 10
bind-key C-K resize-pane -U 10
bind-key C-L resize-pane -R 10

# set status-bg
set -g status-style default

# set window split
bind-key / split-window -h
bind-key - split-window

# default window title colors
set-window-option -g window-status-style fg=blue
set-window-option -g window-status-style bg=default

# active window title colors
set-window-option -g window-status-current-style fg=blue
set-window-option -g window-status-current-style bg=default

# pane border
set-option -g pane-border-style fg=black 
set-option -g pane-active-border-style fg=blue 

# message text
set-option -g message-style bg=black 
set-option -g message-style fg=default 

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour green #green

set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 200
set -g status-right-length 60
set -g status-left '#[fg=green]#{pane_current_path}#[fg=black]â€¢ #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
set -g status-right ' #[fg=cyan]%A, %m %d %Y %I:%M %p'

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-x
bind-key C-x last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -g escape-time 1

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a  to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# vim keys in copy and choose mode
#Ctrl + x | C-x + [ | to enter copy mode 
#cutting yanking and pasting lines into tmux dd to cut line | y to yank line | P to paste into tmux
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"


# to PASTE (from system clipboard to tmux): C-x [ p 
unbind p 
bind p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"

# Makes a new window and name it something
bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename

# color
set -g default-terminal "screen-256color"

# To browse URLs inside tmux you must have urlviewAUR installed and configured.
#Inside a new terminal:
 bind-key u capture-pane \;\
  save-buffer /tmp/tmux-buffer \;\
  split-window -l 10 "urlview /tmp/tmux-buffer"

run-shell ~/.vim/bundle/tmux-resurrect/resurrect.tmux

set -g @resurrect-processes ':all:'
